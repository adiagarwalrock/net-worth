# Generated by Django 5.2.7 on 2025-10-27 23:07

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("currencies", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Liability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Liability name or description", max_length=200
                    ),
                ),
                (
                    "liability_type",
                    models.CharField(
                        choices=[
                            ("CREDIT_CARD", "Credit Card"),
                            ("MORTGAGE", "Mortgage/Home Loan"),
                            ("AUTO_LOAN", "Auto/Vehicle Loan"),
                            ("STUDENT_LOAN", "Student/Education Loan"),
                            ("MEDICAL_LOAN", "Medical Loan"),
                            ("PERSONAL_LOAN", "Personal Loan"),
                            ("LINE_OF_CREDIT", "Line of Credit"),
                            ("OTHER", "Other"),
                        ],
                        help_text="Category of liability",
                        max_length=20,
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Current outstanding balance",
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "creditor",
                    models.CharField(
                        blank=True,
                        help_text="Lender or creditor name",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        blank=True,
                        help_text="Masked account number (e.g., ****1234)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "interest_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Annual interest rate percentage (e.g., 5.25 for 5.25%)",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                    ),
                ),
                (
                    "monthly_payment",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Monthly payment amount",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "credit_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Credit limit (for credit cards and lines of credit)",
                        max_digits=15,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "payment_due_date",
                    models.IntegerField(
                        blank=True,
                        help_text="Day of month payment is due (1-31)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(31),
                        ],
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes about this liability",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this liability is currently active (soft delete)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "last_valued_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When balance was last updated"
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        help_text="Currency in which balance is denominated",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="liabilities",
                        to="currencies.currency",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Owner of this liability",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="liabilities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Liability",
                "verbose_name_plural": "Liabilities",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="LiabilityHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Balance at this point in time",
                        max_digits=15,
                    ),
                ),
                (
                    "recorded_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Timestamp of this record"
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("MANUAL", "Manual Entry"),
                            ("STATEMENT_UPLOAD", "Statement Upload"),
                            ("API_SYNC", "API Sync"),
                        ],
                        default="MANUAL",
                        help_text="How this balance was recorded",
                        max_length=20,
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        help_text="Currency of the balance",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="liability_history",
                        to="currencies.currency",
                    ),
                ),
                (
                    "liability",
                    models.ForeignKey(
                        help_text="Liability this history belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="history",
                        to="liabilities.liability",
                    ),
                ),
            ],
            options={
                "verbose_name": "Liability History",
                "verbose_name_plural": "Liability Histories",
                "ordering": ["-recorded_at"],
            },
        ),
        migrations.AddIndex(
            model_name="liability",
            index=models.Index(
                fields=["user", "liability_type", "is_active"],
                name="liabilities_user_id_0c9f1c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="liability",
            index=models.Index(
                fields=["user", "is_active", "-updated_at"],
                name="liabilities_user_id_d9fc82_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="liabilityhistory",
            index=models.Index(
                fields=["liability", "-recorded_at"],
                name="liabilities_liabili_768f13_idx",
            ),
        ),
    ]
